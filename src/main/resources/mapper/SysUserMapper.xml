<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tieshan.disintegrate.dao.SysUserMapper">

    <select id="allUser" resultType="java.util.Map">
              SELECT
            IFNULL(u.id,'') AS id,
            IFNULL(u.login_name,'') AS login_name,
            IFNULL(u.head_url,'') AS head_url,
            IFNULL(u.user_name,'') AS user_name,
            IFNULL(d.department_name,'') AS  department_name,
            IFNULL(du.department_id,'')  AS department_id,
            IFNULL(u.operator,'') AS operator,
            IFNULL(u.create_time,'') AS  create_time

        FROM
            user u LEFT JOIN department_user du ON u.id = du.user_id
            LEFT JOIN department d ON d.id = du.department_id
</select>
    <select id="selectByUsername" resultType="com.tieshan.disintegrate.pojo.SysUser">
 SELECT
    *
    FROM
    `user`
    where
    login_name =#{username}
    </select>

    <select id="login" resultType="com.tieshan.disintegrate.pojo.SysUser">
         SELECT

             IFNULL(u.login_name,'') AS login_name,
             IFNULL(u.user_name,'') AS user_name,
             IFNULL(u.head_url,'') AS head_url,
             IFNULL(u.user_password,'') AS user_password,
             IFNULL(u.phone,'') AS phone,
             IFNULL(d.id,'') AS depart_id,
             IFNULL(u.id,'') AS id,
             IFNULL(d.department_name,'') AS department_name,
             IFNULL(d.depart_code,'') AS depart_code,
             IFNULL(c.company_name,'') AS company_name,
             IFNULL(c.company_code,'') AS  company_code,
             IFNULL(c.id,'') AS  company_id
        FROM
            user u
            LEFT JOIN department_user du ON u.id = du.user_id
            LEFT JOIN department d ON d.id = du.department_id
            LEFT JOIN company c ON c.company_code = d.company_code
            where
            login_name =#{username} and user_password=#{password}
    </select>
    <insert id="loginlog">
        INSERT INTO ts_login_log ( id, login_name, user_name, login_time )
        VALUES
	    (#{user.id},#{user.login_name},#{user.user_name},now())
    </insert>
    <insert id="loginoutlog">
        INSERT INTO ts_login_log ( id, login_name, user_name,  loginout_time )
        VALUES
	    (#{user.id},#{user.login_name},#{user.user_name},now())
    </insert>


    <select id="existTable" resultType="java.lang.Integer">

            SELECT
               count(*)
            FROM
                information_schema.TABLES
            WHERE
                table_name = 'ts_system_log_${param}'

    </select>
    <delete id="delTable">
        DROP TABLE ts_system_log_${param}
    </delete>
    <insert id="syslog">
        INSERT INTO ts_system_log_${param} ( id, disintegrate_plant_id, operator_id,
         depart_name,operator,method_url,create_time)
        VALUES
	    (#{sysLog.id},#{sysLog.disintegrate_plant_id},#{sysLog.operator_id},#{sysLog.depart_name},
	    #{sysLog.operator},#{sysLog.method_url},now())
    </insert>
    <insert id="creatSyslog">
        CREATE TABLE ts_system_log_${param} (
          `id` bigint(36) NOT NULL AUTO_INCREMENT,
          `disintegrate_plant_id` bigint(36) DEFAULT NULL COMMENT '解体厂id',
          `operator_id` bigint(36) DEFAULT NULL COMMENT '操作人id',
          `depart_name` varchar(64) DEFAULT NULL COMMENT '部门',
          `operator` varchar(64) DEFAULT NULL COMMENT '操作人',
          `method_url` varchar(255) DEFAULT NULL COMMENT '操作的请求',
          `create_time` datetime DEFAULT NULL COMMENT '操作的时间',
          `is_delete` int(1) DEFAULT '2' COMMENT '是否删除。1.删除，2,正常',
          PRIMARY KEY (`id`) USING BTREE
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=DYNAMIC COMMENT='系统日志表';
    </insert>

    <insert id="insertUser">
        INSERT INTO user ( id, login_name, user_name,head_url, user_password, phone, user_status, operator, create_time )
    VALUES
        (#{user.id},#{user.login_name},#{user.user_name},#{user.head_url},#{user.user_password},#{user.phone},#{user.user_status},#{user.operator},now())
</insert>

    <insert id="insertDepartment_user">



        INSERT INTO department_user ( id, user_id, department_id )
    VALUES
        (#{department_user.id},#{department_user.user_id},#{department_user.department_id})
</insert>

    <update id="updateUser">
       UPDATE user
        SET login_name = #{user.login_name},
				user_name=#{user.user_name},
				head_url=#{user.head_url},
 				phone=#{user.phone},
				operator=#{user.operator}
        where id=#{user.id}
    </update>
    <update id="updatePassword">
       UPDATE user
        SET
				user_password=#{user.user_password}

        where id=#{user.id}
    </update>
    <delete id="delUser">

           delete  from user where  id=#{id}
   </delete>
    <update id="updateDepartment_user">
       UPDATE department_user
        SET department_id = #{user.depart_id}
        where user_id=#{user.id}
    </update>
    <delete id="delDepartment_user">
    delete  from department_user where  user_id=#{id}
   </delete>
    <select id="getUserByid" resultType="com.tieshan.disintegrate.pojo.SysUser">

         SELECT
             IFNULL(u.login_name,'') AS login_name,
             IFNULL(u.user_name,'') AS user_name,
             IFNULL(u.head_url,'') AS head_url,
             IFNULL(u.user_password,'') AS user_password,
             IFNULL(u.phone,'') AS phone,
             IFNULL(d.id,'') AS depart_id,
             IFNULL(u.id,'') AS id,
             IFNULL(d.department_name,'') AS department_name,
             IFNULL(d.depart_code,'') AS depart_code,
             IFNULL(c.company_name,'') AS company_name,
             IFNULL(c.company_code,'') AS  company_code,
             IFNULL(c.id,'') AS  company_id
        FROM
            user u
            LEFT JOIN department_user du ON u.id = du.user_id
            LEFT JOIN department d ON d.id = du.department_id
            LEFT JOIN company c ON c.company_code = d.company_code
            where
           u.id =#{id}
    </select>

    <select id="findUserList" resultType="java.util.Map">
        SELECT
				IFNULL(u.id, '') AS id,
				IFNULL(u.user_name, '') AS user_name
		FROM
				user u;
    </select>
    <select id="findUserByPassword" resultType="java.lang.Integer">
            SELECT
                count( 1 ) AS num
            FROM
            user
            WHERE
                id = #{id} and user_password=#{password}
    </select>
    <update id="upHeadUrl">
    UPDATE user set head_url=#{head_url} where  id=#{id}
   </update>
    <update id="upName">
    UPDATE user set user_name=#{user_name} where  id=#{id}
   </update>
</mapper>